// Time Complexity - Storing N elements in a heap of size K takes O(NlogK) time.
// Space Complexity - Storing the elements in a heap takes O(K) space.
// Explanation - We use a min heap to find the Kth largest element.

class KthLargest {
public:
    priority_queue<int, vector<int>, greater<int>> minh;
    int sz;
    
    KthLargest(int k, vector<int>& nums){
        sz = k;
        for(int i = 0; i < nums.size(); i++){
            minh.push(nums[i]);
            if(minh.size() > k) minh.pop();
        }
    }
    
    int add(int val){
        minh.push(val);
        if(minh.size() > sz) minh.pop();
        return minh.top();
    }
};
