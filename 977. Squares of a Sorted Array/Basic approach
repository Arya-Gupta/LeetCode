// Time Complexity - Looping through the array takes O(N) time.
// Space Complexity - No extra space is used, hence space complexity is O(1).
// Explanation - We loop through the array, squaring each element. Then we sort the array to maintain the sorted order.

class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int n = nums.size();
        for(int i = 0; i < n; i++) nums[i] *= nums[i];
        sort(nums.begin(), nums.end());
        return nums;
    }
};
