// Time Complexity - Iterating over the LL takes O(N) time.
// Space Complexity - Since we are creating a new LL, space taken is O(N).
// Explanation - We iterate through all the nodes and create a new LL.
When we encounter a 0, we create a new node in our new LL based upon the value of sum, and sum is changed to 0.

class Solution {
public:
    ListNode* mergeNodes(ListNode* head){
        head = head->next; // New head
        ListNode *temp1 = head, *temp2 = head;
        int sum = 0;
        
        while(temp1){ 
            if(temp1->val){
                sum += temp1->val;
                temp1 = temp1->next;
            }
            else{
                temp2->val = sum;
                sum = 0;
                temp2->next = temp1->next;
                temp1 = temp1->next;
                temp2 = temp1;
            }
        }
        return head;
    }
};
