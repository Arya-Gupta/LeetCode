// Time Complexity - Since iteration is done over the entire array, time complexity is O(N).
// Space Complexity - Array elements are stored in a hash table, thus space complexity is O(N).
// Explanation - We iterate over the array and for every individual element, we check if it is present in the hashmap. If the element is new, we save a element, index pair. Otherwise, the element should already be present in the hashmap. If it is within k distance, we return true. If it is present but NOT within k distance, we update the hashmap with the latest position of the element. 

class Solution {
public:
    bool containsNearbyDuplicate(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int, int> mp;
        for(int i = 0; i < n; i++){
            if(mp.find(nums[i]) == mp.end()) mp[nums[i]] = i; // If element is not present, insert its index into hash table
            else if(i - mp[nums[i]] <= k) return true;
            else mp[nums[i]] = i; // Update element with new index
        }
        return false;
    }
};
